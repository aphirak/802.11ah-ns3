//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimulationBuilder.HostProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulationJob", Namespace="http://schemas.datacontract.org/2004/07/SimulationBuilder")]
    [System.SerializableAttribute()]
    public partial class SimulationJob : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> FinalArgumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimulationBatchGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNrOfSimulationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> FinalArguments {
            get {
                return this.FinalArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalArgumentsField, value) != true)) {
                    this.FinalArgumentsField = value;
                    this.RaisePropertyChanged("FinalArguments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SimulationBatchGUID {
            get {
                return this.SimulationBatchGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SimulationBatchGUIDField, value) != true)) {
                    this.SimulationBatchGUIDField = value;
                    this.RaisePropertyChanged("SimulationBatchGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNrOfSimulations {
            get {
                return this.TotalNrOfSimulationsField;
            }
            set {
                if ((this.TotalNrOfSimulationsField.Equals(value) != true)) {
                    this.TotalNrOfSimulationsField = value;
                    this.RaisePropertyChanged("TotalNrOfSimulations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HostProxy.ISimulationHost")]
    public interface ISimulationHost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulationHost/GetSimulationJob", ReplyAction="http://tempuri.org/ISimulationHost/GetSimulationJobResponse")]
        SimulationBuilder.HostProxy.SimulationJob GetSimulationJob(string hostname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulationHost/SimulationJobDone", ReplyAction="http://tempuri.org/ISimulationHost/SimulationJobDoneResponse")]
        void SimulationJobDone(string simulationBatchGUID, string hostname, int index, long elapsedTicks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimulationHost/SimulationJobFailed", ReplyAction="http://tempuri.org/ISimulationHost/SimulationJobFailedResponse")]
        void SimulationJobFailed(string simulationBatchGUID, string hostname, int index, string error);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimulationHostChannel : SimulationBuilder.HostProxy.ISimulationHost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimulationHostClient : System.ServiceModel.ClientBase<SimulationBuilder.HostProxy.ISimulationHost>, SimulationBuilder.HostProxy.ISimulationHost {
        
        public SimulationHostClient() {
        }
        
        public SimulationHostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimulationHostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulationHostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimulationHostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SimulationBuilder.HostProxy.SimulationJob GetSimulationJob(string hostname) {
            return base.Channel.GetSimulationJob(hostname);
        }
        
        public void SimulationJobDone(string simulationBatchGUID, string hostname, int index, long elapsedTicks) {
            base.Channel.SimulationJobDone(simulationBatchGUID, hostname, index, elapsedTicks);
        }
        
        public void SimulationJobFailed(string simulationBatchGUID, string hostname, int index, string error) {
            base.Channel.SimulationJobFailed(simulationBatchGUID, hostname, index, error);
        }
    }
}
